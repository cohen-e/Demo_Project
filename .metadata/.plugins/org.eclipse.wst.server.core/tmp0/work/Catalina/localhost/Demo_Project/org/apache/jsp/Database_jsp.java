/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.28
 * Generated at: 2018-07-02 15:26:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.ResultSet;
import com.example.Employees_Connection;

public final class Database_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.sql.ResultSet");
    _jspx_imports_classes.add("com.example.Employees_Connection");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html height>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("<title>Employees Table</title>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"css/database1.css\" type=\"text/css\"/> \r\n");
      out.write("\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-1.12.4.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<script src=\"js/jquery-paginate.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\t");

	if (session.getAttribute("user") == null){
		response.sendRedirect("Login.jsp");
	}
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String print = request.getParameter("yes_to_print");
		if (print != null && print.toString().equalsIgnoreCase("YES")) {
			response.setContentType("application/vnd.ms-excel");
			response.setHeader("Content-Disposition", "inline; filename=Employee_Info.xls");
		}
	
      out.write('\r');
      out.write('\n');
      out.write('	');

	if (print == null) {
	
      out.write("\r\n");
      out.write("\t<H1>Employee Table and Information</H1>\r\n");
      out.write("\t");

	}
	
      out.write('\r');
      out.write('\n');
      out.write('	');

		Employees_Connection ts = new Employees_Connection();
		ResultSet rs = ts.getRS();
	
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<table id='myTable' border=\"1\" align=\"center\" width=\"100%\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Employee ID</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">First Name</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Last Name</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Email</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Phone Number</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Hire Date</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Job ID</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Salary</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Commission Pct</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Manager ID</TH>\r\n");
      out.write("\t\t\t\t<TH bgcolor=\"lightblue\">Department ID</TH>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t");

					while (rs.next()) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(1));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(2));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(3));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(4));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(5));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(6));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(7));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(8));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(9));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(10));
      out.write("</td>\r\n");
      out.write("\t\t\t\t<TD bgcolor=\"lightgreen\">");
      out.print(rs.getString(11));
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t");

				}
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t</table>\r\n");
      out.write("\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t$('#myTable').paginate({\r\n");
      out.write("\t\t\tlimit : 10,\r\n");
      out.write("\t\t\tonSelect : function(obj, page) {\r\n");
      out.write("\t\t\t\tconsole.log('Page ' + page + ' selected!');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t</script>\r\n");
      out.write("\t\r\n");
      out.write("\t<br />\r\n");
      out.write("\t");

	if (print == null) {
	
      out.write("\r\n");
      out.write("\t<button type=\"button\" onclick=\"location.href= '/Demo_Project/myJsp.jsp';\">Main Menu</button>\r\n");
      out.write("\t<button type=\"button\" onclick=\"location.href= '/Demo_Project/TestDatabase';\">Java\tClass Database</button>\r\n");
      out.write("\t<button type=\"button\" onclick=\"window.print();\">Print Current Page</button>\r\n");
      out.write("\t<a href=\"Database.jsp?yes_to_print=YES\"><button>Print Table</button></a>\r\n");
      out.write("\t<br></br>\r\n");
      out.write("\t<p>This page incorporates print. The Print Table button prints the entire table in Excel \r\n");
      out.write("\t\twithout the buttons and header.</p>\r\n");
      out.write("\t");

	}
	
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
